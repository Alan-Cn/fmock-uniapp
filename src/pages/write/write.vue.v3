<template>
    <view class="content">
        <navBar :logo="logo" :leftIcon="leftIcon"
                :rightWords="rightWords"
                :title="title"
                @rightClick="rightClick()"
                @leftClick="toBack()">
        </navBar>

        <m-input class="m-input" type="text" clearable focus v-model="postTitle"  placeholder="输入文章标题"></m-input>
        <!-- 编辑器 -->
        <view class="editor">
            <view id="medium-editor-content"></view>
        </view>

        <button type="primary" class="primary e-font30" @tap="post">发布</button>
    </view>
</template>

<script>
import { mapState, mapActions } from 'vuex'
import navBar from '@/components/nav-bar.vue'
import mInput from '@/components/m-input.vue'
import MediumEditor from 'medium-editor'
import 'medium-editor/dist/css/medium-editor.css'
import 'medium-editor/dist/css/themes/beagle.css'

    export default {
        data() {
            return {
                logo: '',
                leftIcon: 'iconioscloseempty',
                rightWords: '发布',
                title: '发布主题内容',
                postTitle: '',
                anonymous: false,

                // 编辑器实例
                editor: {}
            }
        },
        components: {
            navBar,
            mInput,
        },
        computed: {
            ...mapState(['hasBinding', 'hasLogin']),
        },
        onLoad: function () {

            // 在需要登录的地方执行初始化方法
            this.initLoginState()

            // 判断登录状态
            if (!this.hasLogin) {
                this.toLogin()
            }
        },
        onReady: function () {
            this.initEditor()
        },
        methods: {
            ...mapActions(['initLoginState']),

            initEditor() {
                const editor = new MediumEditor('#medium-editor-content')
                this.editor = editor
            },


            post() {

            },

            rightClick() {
                console.log('right')
            },
            toLogin() {
                uni.reLaunch({
                    url: '../login/login'
                });
            },
            toBack() {
                uni.navigateBack({
                    delta: 1
                });
            },
        }
    }
</script>

<style scoped>
    .content {
        background: #fff;
        padding: 0;
    }
    .editor {
        height: 85%;
        width: 100%;
    }


    .medium-editor-toolbar li button {
        background-color: transparent;
        border: none;
        -webkit-box-sizing: border-box;
        box-sizing: border-box;
        color: #ccc;
        height: 40px;
        min-width: 40px;
        padding: 5px 12px;
        -webkit-transition: background-color .2s ease-in, color .2s ease-in;
        transition: background-color .2s ease-in, color .2s ease-in;
    }
    .medium-editor-toolbar li button {
        -webkit-box-sizing: border-box;
        box-sizing: border-box;
        cursor: pointer;
        display: block;
        font-size: 14px;
        line-height: 1.33;
        margin: 0;
        padding: 15px;
        text-decoration: none;
    }
</style>
